version: '3'
services:

  collector:
    image: otel/opentelemetry-collector:0.72.0
    command: [ "--config=/etc/otel-collector-config.yml" ]
    volumes:
      - ./otel-config.yml:/etc/otel-collector-config.yml
    ports:
      - "4317:4317"
    depends_on:
      - jaeger-service

  jaeger-service:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14250"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9093:9093"
    expose:
      - "9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=zookeeper

  mongodb:
    image: mongo:latest
    container_name: "mongodb"
    environment:
      - MONGO_LOG_DIR=/dev/null
    ports:
      - "27017:27017"
    volumes:
      - ./data/db/mongo:/data/db

  neo4j:
    image: neo4j:latest
    environment:
      - NEO4J_AUTH=neo4j/admin123
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - ./data/db/neo4j:/data

  cassandra:
    image: cassandra:latest
    ports:
      - "9160:9160"
      - "9042:9042"
    volumes:
      - ./data/db/cassandra:/var/lib/cassandra

  service-discovery:
    build: ./instagram-cloud-infra/service-discovery/
    image: service-discovery:0.0.1-SNAPSHOT
    container_name: service-discovery
    ports:
      - "8761:8761"

  api-gateway:
    build: ./instagram-cloud-infra/api-gateway/
    image: api-gateway:0.0.1-SNAPSHOT
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - service-discovery

  auth-service:
    build: ./instagram-services/auth-service
    image: auth-service:0.0.1-SNAPSHOT
    container_name: auth-service
    ports:
      - "8091:8091"
    depends_on:
      - api-gateway
      - mongodb

  feed-service:
    build: ./instagram-services/feed-service
    image: feed-service:0.0.1-SNAPSHOT
    container_name: feed-service
    ports:
      - "8092:8092"
    depends_on:
      - api-gateway
      - cassandra

  graph-service:
    build: ./instagram-services/graph-service
    image: graph-service:0.0.1-SNAPSHOT
    container_name: graph-service
    ports:
      - "8093:8093"
    depends_on:
      - api-gateway
      - neo4j

#  media-service:
#    build: ./instagram-services/media-service
#    image: media-service:0.0.1-SNAPSHOT
#    container_name: media-service
#    ports:
#      - "8094:8094"
#    depends_on:
#      - api-gateway
#
#  notification-service:
#    build: ./instagram-services/notification-service
#    image: notification-service:0.0.1-SNAPSHOT
#    container_name: notification-service
#    ports:
#      - "8095:8095"
#    depends_on:
#      - api-gateway

  post-service:
    build: ./instagram-services/post-service
    image: post-service:0.0.1-SNAPSHOT
    container_name: post-service
    ports:
      - "8096:8096"
    depends_on:
      - api-gateway
      - mongodb

#  search-service:
#    build: ./instagram-services/search-service
#    image: search-service:0.0.1-SNAPSHOT
#    container_name: search-service
#    ports:
#      - "8097:8097"
#    depends_on:
#      - api-gateway
